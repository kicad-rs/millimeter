var searchIndex = JSON.parse('{\
"millimeter":{"doc":"","t":[3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,10,10,10,10,3,10,3,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10],"n":["NonFinite","Unit","abs","abs","add","add","add_assign","add_assign","atan2","atan2","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cm","cm2","cmp","cmp","default","default","deserialize","deserialize","div","div","div","div","div","div_assign","div_assign","dm","dm2","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_str","from_str","hash","hash","inch","inch2","into","into","into","km","km2","m","m2","mm","mm","mm2","mm2","mul","mul","mul","mul_assign","mul_assign","ne","ne","neg","neg","new","new","nm","nm2","partial_cmp","partial_cmp","raw_value","raw_value","rem","rem","rem","rem","round","round","serialize","serialize","sqrt","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_new","try_new","type_id","type_id","type_id","µm","µm2"],"q":["millimeter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Returns the absolute value of <code>self</code>.","Returns the absolute value of <code>self</code>.","","","","","Computes the four quadrant arctangent of <code>self</code> and <code>other</code> in …","Computes the four quadrant arctangent of <code>self</code> and <code>other</code> in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a helper method for creating this type. You might …","This is a helper method for creating this type. You might …","","","","","Return the raw value.","Return the raw value.","","","","","Returns the nearest integer to <code>self</code>. Round half-way cases …","Returns the nearest integer to <code>self</code>. Round half-way cases …","","","","","","","","","","","","","","","","","","","","This is a helper method for creating this type. You might …","This is a helper method for creating this type. You might …","","","","",""],"i":[0,0,1,2,1,2,1,2,1,2,3,1,2,3,1,2,3,1,2,3,1,2,4,4,1,2,1,2,1,2,1,1,2,2,2,1,2,4,4,1,2,3,3,1,1,2,2,3,1,2,1,2,1,2,4,4,3,1,2,4,4,4,4,0,4,0,4,1,1,2,1,2,1,2,1,2,1,2,4,4,1,2,1,2,1,1,2,2,1,2,1,2,2,1,2,1,2,3,1,2,3,1,2,3,1,2,3,1,2,1,2,3,1,2,4,4],"f":[null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["f32",15]],[[],["f32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nonfinite",3]],[[],["mm",3]],[[],["mm2",3]],[[]],[[]],[[]],[[],["mm",3]],[[],["mm2",3]],[[],["ordering",4]],[[],["ordering",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["f32",15]]],[[["mm",3]],["f32",15]],[[["f32",15]]],[[["mm2",3]],["f32",15]],[[["mm",3]],["mm",3]],[[["f32",15]]],[[["f32",15]]],[[],["mm",3]],[[],["mm2",3]],[[["mm",3]],["bool",15]],[[["mm2",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[]],[[]],[[],["mm",3]],[[],["mm2",3]],[[]],[[]],[[]],[[],["mm",3]],[[],["mm2",3]],[[],["mm",3]],[[],["mm2",3]],null,[[],["mm",3]],null,[[],["mm2",3]],[[["mm",3]],["mm2",3]],[[["f32",15]]],[[["f32",15]]],[[["f32",15]]],[[["f32",15]]],[[["mm",3]],["bool",15]],[[["mm2",3]],["bool",15]],[[]],[[]],[[["f32",15]]],[[["f32",15]]],[[],["mm",3]],[[],["mm2",3]],[[["mm",3]],[["option",4,["ordering"]],["ordering",4]]],[[["mm2",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["f32",15]],[[],["f32",15]],[[]],[[["f32",15]]],[[["f32",15]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["mm",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["f32",15]],[["nonfinite",3],["result",4,["nonfinite"]]]],[[["f32",15]],[["nonfinite",3],["result",4,["nonfinite"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["mm",3]],[[],["mm2",3]]],"p":[[3,"mm"],[3,"mm2"],[3,"NonFinite"],[8,"Unit"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};